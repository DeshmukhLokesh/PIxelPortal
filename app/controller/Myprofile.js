/*
 * File: app/controller/Myprofile.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Myprofile', {
    extend: 'Ext.app.Controller',

    Index: function() {

        this.getApplication().getController('BaseSession').ValidateSession();


        /*
        Ext.Ajax.request({
                        url: 'php/IsSessionAlive.php',
                        method: 'GET',
                        success: function(conn, response, options, eOpts) {
                            var response = MyApp.util.Util.decodeJSON(conn.responseText);
                            if(response.success)
                            {
                                      var appHeader = Ext.ComponentQuery.query('#headerPanel')[0];

                                        var tb = appHeader.down('tbfill');
                                        var logout = appHeader.down('#logoutMenu');
                                        var loginButton  = appHeader.down('#login');
                                        var signupButton =  appHeader.down('#signup');
                                        //logout.setValue('New User');
                                        logout.setVisible(true);
                                        loginButton.setVisible(false);
                                        signupButton.setVisible(false);

                                        var menuPanel = Ext.ComponentQuery.query('#menuPanel')[0];

                                        menuPanel.setVisible(true);
                            }
                            else
                            {
                                 Ext.Router.redirect('login');

                            }


                        }});
                            */
    },

    init: function(application) {
        this.control(
                    {
                     "myprofile button#saveprofile":
                     {click:this.onButtonClickSaveProfile}
                    });
    },

    onButtonClickSaveProfile: function(button, e, options) {

        // var win = button.up('window'),
            //    formPanel = win.down('form'),
            //    store = this.getUsersList().getStore();
         var formPanel = button.up('form');
                if (formPanel.getForm().isValid()) {

                    formPanel.getForm().submit({
                        clientValidation: true,
                        url: 'php/clients/saveProfile.php',
                        success: function(form, action) {

                            var result = action.result;

                            console.log(result);

                            if (result.success) {

                                 Ext.Msg.alert('Success', 'Changes saved successfully');

                                var appHeader = Ext.ComponentQuery.query('#headerPanel')[0];
                                var profileHeaderImage = appHeader.down('#profileHeaderImage');
                                profileHeaderImage.setSrc('resources/ProfileImages/'+result.profilePicture);

                             //   store.load();
                             //   win.close();

                            } else {
                                //Packt.util.Util.showErrorMsg(result.msg);
                                 Ext.Msg.alert(result.msg);
                            }
                        },
                        failure: function(form, action) {
                            switch (action.failureType) {
                                case Ext.form.action.Action.CLIENT_INVALID:
                                    Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
                                    break;
                                case Ext.form.action.Action.CONNECT_FAILURE:
                                    Ext.Msg.alert('Failure', 'Ajax communication failed');
                                    break;
                                case Ext.form.action.Action.SERVER_INVALID:
                                    Ext.Msg.alert('Failure', action.result.msg);
                           }
                        }
                    });
                }
    }

});
