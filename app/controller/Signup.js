/*
 * File: app/controller/Signup.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Signup', {
    extend: 'Ext.app.Controller',

    Index: function() {
        this.getApplication().getController('BaseSession').EnableGuestView();
    },

    init: function(application) {
           this.control({"button#createmyaccount":{click:this.onButtonClickCreateMyAccount}});
           this.control({"button#checkDomain":{click:this.onButtonClickCheckDomain}});


    },

    onButtonClickCreateMyAccount: function(button, e, options) {
        var formPanel = button.up('panel'),
            register = button.up('signup'),
            name = formPanel.down('textfield[name=name]').getValue(),
            company = formPanel.down('textfield[name=company]').getValue();
            address = formPanel.down('textfield[name=address]').getValue();
            state = formPanel.down('textfield[name=state]').getValue();
            city = formPanel.down('textfield[name=city]').getValue();
            phone = formPanel.down('textfield[name=phone]').getValue();
            email = formPanel.down('textfield[name=email]').getValue();
            zip = formPanel.down('textfield[name=zip]').getValue();
            domain = formPanel.down('textfield[name=domain]').getValue();
            packageId = formPanel.down('textfield[name=plancombo]').getValue();
            password = formPanel.down('textfield[name=password1]').getValue();
           // paymentstatus= formPanel.down('radiofield[name=paymentstatus]').getValue();


        if(formPanel.getForm().isValid())
        {
             Ext.get(register.getEl()).mask("Processing your request... Please wait...", 'loading');

            Ext.Ajax.request(
                {
                url:'rpcphp/clients/add.php',
                params:
                {
                     name:name,
                     company:company,
                     address:address,
                     state:state,
                     city:city,
                     zip:zip,
                     phone:phone,
                     email:email,
                     domain:domain,
                     packageId:packageId,
                     password:MyApp.util.MD5.encode(password)
                },
                 success: function(conn, response, options, eOpts)
                          {

                            var result = MyApp.util.Util.decodeJSON(conn.responseText);

                            if (result.code == 1)
                            {

                               //button.up('viewporthome').destroy();

                                //Ext.create('MyApp.view.MyViewport');
                                  Ext.Router.redirect('myprofile');
                            }
                            else
                            {
                                if(result.messages[0].code == 112)
                                {

                                    Ext.Msg.show
                                    ({
                                        title:'Duplicate Client Found!',
                                        msg:result.messages[0].msg,
                                        icon:Ext.Msg.INFORMATION,
                                        buttons:Ext.Msg.OK
                                    });

                                    Ext.get(register.getEl()).unmask();

                                }
                                else
                                {
                                    Ext.Msg.show
                                    ({
                                        title:'Error!',
                                        msg:result.messages[0].msg,
                                        icon:Ext.Msg.ERROR,
                                        buttons:Ext.Msg.OK
                                    });

                                }
                            }
                        },
                failure:function(conn,response,options,eOpts)
                        {
                            Ext.get(login.getEl()).unmask();

                            Ext.Msg.show
                            ({
                                title:'Error!',
                                msg:conn.responseText,
                                icon:Ext.Msg.ERROR,
                                buttons:Ext.Msg.OK
                            });
                        }
                }
               );
        }
    },

    onButtonClickCheckDomain: function(component, options) {
           Ext.Msg.show({
                            title:'Please contact support',
                            msg: 'This part of the application is yet to implement, please continue.',
                            buttons: Ext.Msg.OK,
                            icon: Ext.Msg.INFO
                        });
    }

});
