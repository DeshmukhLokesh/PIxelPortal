/*
 * File: app/view/signup/Index.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.signup.Index', {
    extend: 'Ext.form.Panel',
    alias: 'widget.signup',

    requires: [
        'Ext.panel.Panel',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Display',
        'Ext.button.Button',
        'Ext.form.field.Checkbox'
    ],

    height: 710,
    width: 580,
    bodyPadding: 10,
    frameHeader: false,
    title: 'Sign Up',
    titleAlign: 'center',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    height: 291,
                    style: '',
                    width: 555,
                    defaults: {
                        margin: '15 0 0 25',
                        msgTarget: 'under'
                    },
                    layout: 'column',
                    collapsible: true,
                    title: 'Basic Information',
                    items: [
                        {
                            xtype: 'textfield',
                            validator: function(value) {
                                if (!(/[a-zA-Z\s]+$/.test(value)))
                                {
                                    return "This Field should be in alphabets";
                                }
                                else
                                {
                                    // alert(v);
                                    //return "Sorry";
                                }
                                return true;
                            },
                            itemId: 'name',
                            width: 500,
                            name: 'name',
                            allowBlank: false,
                            allowOnlyWhitespace: false,
                            emptyText: 'Full Name *',
                            listeners: {
                                blur: {
                                    fn: me.onNameBlur,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'company',
                            width: 500,
                            name: 'company',
                            allowBlank: false,
                            allowOnlyWhitespace: false,
                            emptyText: 'Company *'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'address',
                            width: 500,
                            name: 'address',
                            emptyText: 'Address'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'city',
                            name: 'city',
                            emptyText: 'City'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'state',
                            name: 'state',
                            emptyText: 'State'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'zip',
                            width: 116,
                            name: 'zip',
                            emptyText: 'Zip'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'phone',
                            width: 320,
                            msgTarget: 'side',
                            name: 'phone',
                            emptyText: 'Phone'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'email',
                            width: 320,
                            name: 'email',
                            allowBlank: false,
                            allowOnlyWhitespace: false,
                            emptyText: 'Email Address *',
                            vtype: 'email',
                            vtypeText: 'Please enter an email address',
                            listeners: {
                                blur: {
                                    fn: me.onEmailBlur,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    height: 120,
                    width: 555,
                    defaults: {
                        msgTarget: 'under'
                    },
                    bodyBorder: false,
                    collapseFirst: false,
                    collapsible: true,
                    frameHeader: false,
                    title: 'Choose your plan [ It can be changed at any time ]',
                    items: [
                        {
                            xtype: 'combobox',
                            itemId: 'plancombo',
                            margin: '15 10 10 25',
                            width: 320,
                            name: 'plancombo',
                            allowBlank: false,
                            allowOnlyWhitespace: false,
                            emptyText: 'Please select a plan',
                            displayField: 'name',
                            queryMode: 'local',
                            store: 'PackageDropDown',
                            valueField: 'id'
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    width: 555,
                    defaults: {
                        msgTarget: 'under'
                    },
                    layout: 'column',
                    collapseFirst: false,
                    collapsible: true,
                    frameHeader: false,
                    title: 'Choose your domain and set password',
                    items: [
                        {
                            xtype: 'textfield',
                            itemId: 'domain',
                            margin: '15 10 10 25',
                            width: 214,
                            name: 'domain',
                            emptyText: 'Enter your domain'
                        },
                        {
                            xtype: 'displayfield',
                            margin: '15 10 10 0',
                            width: 127,
                            value: '.x______x.pixelriver.com'
                        },
                        {
                            xtype: 'button',
                            id: 'checkDomain',
                            itemId: 'checkDomain',
                            margin: '15 10 10 10',
                            width: 130,
                            text: 'Check Availability'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'password',
                            margin: '10 10 10 25',
                            width: 249,
                            name: 'password',
                            inputType: 'password',
                            allowBlank: false,
                            allowOnlyWhitespace: false,
                            emptyText: 'Password *',
                            maxLength: 10,
                            minLength: 6
                        },
                        {
                            xtype: 'textfield',
                            validator: function(value) {
                                var password1 = this.previousSibling('[name=password]');
                                return (value === password1.getValue()) ? true : 'Passwords do not match.';
                            },
                            itemId: 'password1',
                            margin: '10 10 10 25',
                            width: 249,
                            name: 'password1',
                            inputType: 'password',
                            allowBlank: false,
                            allowOnlyWhitespace: false,
                            emptyText: 'Confirm Password *',
                            maxLength: 10,
                            minLength: 6
                        }
                    ]
                },
                {
                    xtype: 'checkboxfield',
                    anchor: '100%',
                    itemId: 'acceptTerms',
                    margin: '15 0 0 0',
                    name: 'acceptTerms',
                    boxLabel: 'I have read and accept the <a href="#" class="terms">Terms of Use</a>.',
                    listeners: {
                        click: {
                            fn: me.function,
                            element: 'boxLabelEl',
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'button',
                    formBind: true,
                    itemId: 'createmyaccount',
                    margin: '10 0 0 0',
                    width: 155,
                    scale: 'medium',
                    text: 'Create My Account'
                }
            ]
        });

        me.callParent(arguments);
    },

    onNameBlur: function(component, e, eOpts) {
        var formPanel = this.up('panel');
          var newVal = formPanel.down('#name').getValue();
        //alert(newVal);

           Ext.Ajax.request({
                               url: 'php/checkDupUserName.php',
                               method: 'GET',
                                params:
                                                            {
                                                                user: newVal
                                                            },


                success: function(conn, response, options, eOpts) {



                                    var result = MyApp.util.Util.decodeJSON(conn.responseText);

                                    if (result.success) {

                                        Ext.Msg.show
                                                                        ({
                                                                            title: 'Duplicate User Name Found!',
                                                                            msg: 'We have already registered user with this User Name.',
                                                                            icon: Ext.Msg.ERROR,
                                                                            buttons: Ext.Msg.OK
                                                                        });
                                                                Ext.ComponentQuery.query('textfield#name')[0].focus(true, 200);


                                    }

                                }

                                                    });
    },

    onEmailBlur: function(component, e, eOpts) {
        var formPanel = this.up('panel');
          var newVal = formPanel.down('#email').getValue();
        //alert(newVal);

           Ext.Ajax.request({
                               url: 'php/checkDupEmail.php',
                               method: 'GET',
                                params:
                                                            {
                                                                email: newVal
                                                            },


                success: function(conn, response, options, eOpts) {



                                    var result = MyApp.util.Util.decodeJSON(conn.responseText);

                                    if (result.success) {

                                        Ext.Msg.show
                                                                        ({
                                                                            title: 'Duplicate Email Found!',
                                                                            msg: 'We have already registered user with this Email Address.',
                                                                            icon: Ext.Msg.ERROR,
                                                                            buttons: Ext.Msg.OK
                                                                        });
                                                                Ext.ComponentQuery.query('textfield#email')[0].focus(true, 200);


                                    }

                                }

                                                    });
    },

    function: function(e) {

                                var target = e.getTarget('.terms'),
                                    win;

                                e.preventDefault();
                                var formPanel = this.up('panel');
                                if (target) {
                                    win = Ext.widget('window', {
                                        title: 'Terms of Use',
                                        modal: true,
                                        html: ' <h2>Terms of Use</h2>  <p>Agreement between User and Pixel River, and its affiliates and subsidiaries (collectively "Pixel River"). This web site is offered to you, the User, conditioned upon your acceptance without modification of the terms, conditions and notices contained herein ("Terms"). Your use of this web site constitutes your agreement to all such terms, conditions and notices.  Sencha reserves the right to update the Terms at any time without notice to you. The most current version of the Terms can be reviewed by clicking on the "Terms of Use" hypertext link located at the bottom of our web pages.</p>  <h3>Description of Services</h3><P>......................................</P>',
                                        width: 700,
                                        height: 400,
                                        bodyStyle: 'padding: 10px 20px;',
                                        autoScroll: true,

                                        buttons: [{
                                            text: 'Decline',
                                            handler: function() {
                                                this.up('window').close();
                                                formPanel.down('[name=acceptTerms]').setValue(false);
                                            }
                                        }, {
                                            text: 'Accept',
                                            handler: function() {
                                                this.up('window').close();
                                                formPanel.down('[name=acceptTerms]').setValue(true);
                                            }
                                        }]
                                    });
                                    win.show();
                                }

    }

});